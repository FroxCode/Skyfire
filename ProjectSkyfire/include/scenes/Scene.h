////////////////////////////////////////////////////////////
//
// Scene.h
// Created by Dale Sinnott
// 18/12/2018
//
////////////////////////////////////////////////////////////
#ifndef _SCENE_H_
#define _SCENE_H_

////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////
///C++
#include <memory>

///SFML
#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
#include <SFML/OpenGL.hpp>

///ABSTRACT CLASS
class Scene
{
public:
	////////////////////////////////////////////////////////////
	/// Default constructor
	////////////////////////////////////////////////////////////
	Scene() {}

	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	////////////////////////////////////////////////////////////
	Scene(std::string name) : m_name(name) {}

	////////////////////////////////////////////////////////////
	/// Pure virtual destructor
	////////////////////////////////////////////////////////////
	virtual ~Scene() = 0;

	////////////////////////////////////////////////////////////
	/// Member functions
	////////////////////////////////////////////////////////////
	virtual void initialise() = 0;
	virtual void update() = 0;
	virtual void render(std::shared_ptr<sf::RenderWindow> &window, std::shared_ptr<sf::Shader> shaders = nullptr) = 0;
	
	////////////////////////////////////////////////////////////
	/// Getters and Setters
	////////////////////////////////////////////////////////////
	std::string getName() { return m_name; }
	void setName(std::string name) { m_name = name; }

protected:
	std::string m_name;


};
#endif;
