////////////////////////////////////////////////////////////
//
// Component.h
// Created by Dale Sinnott
// 17/12/2018
//
////////////////////////////////////////////////////////////
#ifndef _COMPONENT_H_
#define _COMPONENT_H_

////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////
///C++
#include <string>
#include <iostream>

///ABSTRACT CLASS
class Component
{
public:
	////////////////////////////////////////////////////////////
	/// Default constructor
	////////////////////////////////////////////////////////////
	Component() {}

	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	////////////////////////////////////////////////////////////
	Component(std::string name) : m_name(name) 
	{ std::cout << "Created base Component of " + m_name << std::endl; }

	////////////////////////////////////////////////////////////
	/// Pure virtual destructor
	////////////////////////////////////////////////////////////
	//virtual ~Component() = 0;

	////////////////////////////////////////////////////////////
	/// Getters/Setters
	////////////////////////////////////////////////////////////
	void setName(std::string name) { m_name = name; }
	std::string getName() { return m_name; }


protected:
	////////////////////////////////////////////////////////////
	/// Member Variables
	////////////////////////////////////////////////////////////
	std::string m_name;

};
#endif;