////////////////////////////////////////////////////////////
//
// VelocityComponent.h (Simple 2D velocity)
// Created by Dale Sinnott
// 08/01/2019
//
////////////////////////////////////////////////////////////
#ifndef _VELOCITYCOMPONENT_H_
#define _VELOCITYCOMPONENT_H_

////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////
///Frox
#include "Component.h"

///SFML
#include"SFML/Graphics/Transform.hpp"

class VelocityComponent : public Component
{
public:
	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	////////////////////////////////////////////////////////////
	VelocityComponent(sf::Vector2f velocity = sf::Vector2f(0.f, 0.f)) : 
		Component("VelocityComponent"),
		m_velocity(velocity) {}

	////////////////////////////////////////////////////////////
	/// Destructor (for overriding virtual function in abstract 
	/// base Component)
	////////////////////////////////////////////////////////////
	~VelocityComponent() { }

	////////////////////////////////////////////////////////////
	/// Getters/Setters
	////////////////////////////////////////////////////////////
	void setVelocity(sf::Vector2f velocity) { m_velocity = velocity; }
	sf::Vector2f getVelocity() { return m_velocity; }

private:
	////////////////////////////////////////////////////////////
	/// Member Variables
	////////////////////////////////////////////////////////////
	sf::Vector2f m_velocity;

};
#endif;